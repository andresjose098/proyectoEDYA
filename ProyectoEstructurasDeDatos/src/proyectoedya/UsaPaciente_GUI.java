/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoedya;

import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showInputDialog;
import static proyectoedya.UsaPaciente_GUI.fechaActual;

/**
 *
 * @author Usuario
 */
public class UsaPaciente_GUI extends javax.swing.JFrame {

    /**
     * Creates new form UsaPaciente
     */
    private ArrayList<Paciente> losPacientes = new ArrayList<>();
   
        private int consecutivo ; 
    public UsaPaciente_GUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        llenarDatosAuxiliares(losPacientes);
        boolean validar=true;
       
        
            jTextField8.setText(fechaActual());
          
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        ejecutarReporte = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<String>();
        jLabel14 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Nombre = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jLabel15 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        InsertarPaciente = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<String>();
        InsertarServicioMedico = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        ejecutarReporte.setText("Ejecutar Reporte");
        ejecutarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarReporteActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos los Pacientes", "Un paciente" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel14.setText("Dato");

        jTextField7.setText("23957354");
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ejecutarReporte)
                .addGap(95, 95, 95))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ejecutarReporte)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Paciente");

        Nombre.setText("Nombre");

        jTextField1.setText("Alex");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Paciente Cotizante ");

        jLabel5.setText("Salario");

        jLabel6.setText("Celular");

        jTextField3.setText("1006108305");

        jTextField4.setText("0");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Servicio Medico");

        jLabel10.setText("Fecha");

        jLabel11.setText("Costo");

        jTextField6.setText("0");
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel12.setText("Tipo");

        jTextField8.setText("dia/mes/a√±o");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Consulta medica general", "Consulta medica especialista", "Cirugia", "Hospitalizacion" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel15.setText("Nro identificacion");

        jTextField5.setText("0");
        jTextField5.setPreferredSize(new java.awt.Dimension(60, 20));
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Paciente Beneficiario ");

        jLabel8.setText("tipo Identificacion");

        InsertarPaciente.setText("InsertarPaciente");
        InsertarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarPacienteActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Paciente Cotizante", "Paciente Beneficiario" }));

        InsertarServicioMedico.setText("Insertar Servicio Medico");
        InsertarServicioMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarServicioMedicoActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TI", "CC", "RC", "CE" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(Nombre)
                                                .addGap(48, 48, 48)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel1)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                                        .addComponent(InsertarPaciente)))))
                                        .addGap(111, 111, 111)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(41, 41, 41)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField4))
                                        .addGap(53, 53, 53)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7)
                                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(33, 33, 33)
                                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InsertarServicioMedico)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(116, 116, 116))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(163, 163, 163))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Nombre)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(InsertarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(InsertarServicioMedico))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(339, 339, 339)
                        .addComponent(salir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed


   //M√©todo para obtener un nuevo consecutivo
private int obtenerNuevoConsecutivo(){
  
 consecutivo++;
return consecutivo;
}



public void llenarDatosAuxiliares(ArrayList<Paciente> info)
    {
        Paciente objE;
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        PacienteCotizante objC;
        
       
         objC = new PacienteCotizante(2000000, 31874895, obtenerNuevoConsecutivo(), 31874203, "Elizabeth");
        objC.getSusServiciosMedicos().add(new ServicioMedico("Consulta medica especialista",LocalDate.parse("2020/11/20", formato),80000,objC.CalcularRangosalarial(objC.getSalario())));
        info.add(objC);
        
        objE = new PacienteBeneficiario("CC",obtenerNuevoConsecutivo(),94409,"Alexandra Diaz",objC.CalcularRangosalarial(objC.getSalario()), objC.getNumeroIdentidad());
        objE.getSusServiciosMedicos().add(new ServicioMedico("Hospitalizacion",LocalDate.parse("2020/10/20", formato),20000,objC.CalcularRangosalarial(objC.getSalario())));
        info.add(objE);
       
         objC = new PacienteCotizante(908526,305739389,obtenerNuevoConsecutivo(),23957354,"Pablo Gomez");
                objC.getSusServiciosMedicos().add(new ServicioMedico("Cirujia",LocalDate.parse("2021/08/20", formato),200000,objC.CalcularRangosalarial(objC.getSalario())));
        info.add(objC);
        
        objE = new PacienteBeneficiario("TI",obtenerNuevoConsecutivo(),138702830,"Jose Rivas",objC.CalcularRangosalarial(objC.getSalario()), objC.getNumeroIdentidad());
        objE.getSusServiciosMedicos().add(new ServicioMedico("Consulta medica general",LocalDate.parse("2020/11/20", formato),50000,objC.CalcularRangosalarial(objC.getSalario())));
        info.add(objE);
        
         objC = new PacienteCotizante(2000000,314562753,obtenerNuevoConsecutivo(),28309230,"Daniela Tenorio");
                objC.getSusServiciosMedicos().add(new ServicioMedico("Hospitalizacion",LocalDate.parse("2021/09/21", formato),500000,objC.CalcularRangosalarial(objC.getSalario())));
        info.add(objC);
        
        
        objE = new PacienteBeneficiario("CC",obtenerNuevoConsecutivo(),63820920,"Isabel Rengifo",objC.CalcularRangosalarial(objC.getSalario()), objC.getNumeroIdentidad());
        objE.getSusServiciosMedicos().add(new ServicioMedico("Consulta medica especialista",LocalDate.parse("2020/08/20", formato),800000,objC.CalcularRangosalarial(objC.getSalario())));
        info.add(objE);
        
       
        
       
        objE = new PacienteCotizante(9000000,315678904,obtenerNuevoConsecutivo(),19302205,"Camila Cortes");
                objE.getSusServiciosMedicos().add(new ServicioMedico("Cirujia",LocalDate.parse("2020/08/20", formato),500000,objC.CalcularRangosalarial(objC.getSalario())));
        info.add(objE);
    }
   
    private void ejecutarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarReporteActionPerformed
        // TODO add your handling code here:
        String opcion = jComboBox3.getSelectedItem().toString();

        switch (opcion)
        {
            case "Todos los Pacientes":
              ordenarNumeroIdentidad(losPacientes); 
            jTextArea1.setText(listarPacientes(losPacientes));   
            break;
            case "Un paciente":
                try{
            int elNumeroIdentificacion = Integer.parseInt(jTextField7.getText());
            jTextArea1.setText(listarunpaciente(losPacientes,elNumeroIdentificacion));
            break;
                }catch(NumberFormatException x){
                     JOptionPane.showMessageDialog(null, "Por favor ingrese datos  numericos", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            default:

            jTextArea1.setText("");
            break;
        }
        
      
    }//GEN-LAST:event_ejecutarReporteActionPerformed
            
    
        //M√©todo para la busqueda binaria
        public static int busquedaBinariaRecursiva_Numero_identidad(ArrayList<Paciente> datos, 
            int p, int q, int numeroidentidad)
    {
       int posicion = -1;
        if (p <= q)
        {
            int m = (p+q)/2;
            if(numeroidentidad==datos.get(m).getNumeroIdentidad())
            {
                posicion = m;
            }
            else{
                if (numeroidentidad<datos.get(m).getNumeroIdentidad()){ 
                    posicion =busquedaBinariaRecursiva_Numero_identidad (datos,p,m-1,numeroidentidad); 
                }
                else{
                    posicion =busquedaBinariaRecursiva_Numero_identidad (datos,m+1,q,numeroidentidad);
                }
            }
        }
        return posicion;
    }     
    
        //M√©todo para ordenar por numero de identidad
     public static void ordenarNumeroIdentidad (ArrayList<Paciente> datos)
    {
        
    datos.sort((x,y) ->new Integer(x.getNumeroIdentidad()).compareTo(y.getNumeroIdentidad()));
    
    }
        
        //M√©todo para listar todos los pacientes
       public String listarPacientes(ArrayList<Paciente> datos)
    {
        String res="Los pacientes registrados son:\n";
        
      
//        AGREGAR LOS METODOS ...
//        for (int i=0; i<datos.size(); i++) {
//           res += "\n"+" Numero de registro: "+datos.get(i).getNumeroRegistro()+" ,Numero de identidad: "+datos.get(i).getNumeroIdentidad()+" ,Nombre: "+datos.get(i).getNombre()+"\n";
//         
//          
//         res+="\n"+(i+1)+datos.get(i).getSusServiciosMedicos();
//          
//         
//        }
         for(Paciente obj : losPacientes)
        {
            res+=    "\n"+" Numero de registro: "+obj.getNumeroRegistro()+" ,Numero de identificaci√≥n: "+obj.getNumeroIdentidad()+" ,Nombre del paciente: "+obj.getNombre()+"\n";
            
            ArrayList <ServicioMedico> susServicioMedicos = new ArrayList<>();
            susServicioMedicos=obj.getSusServiciosMedicos();
            int i=0;
            for(ServicioMedico objD: susServicioMedicos)
            {
              
            res+=(i+1)+"."+" Fecha: "+objD.getFechaValida()+", Tipo: "+objD.getTipo()+"\n";
                i++;
            }
        } 
         return res;
    }
       //M√©todo para listar un paciente
       public static String listarunpaciente(ArrayList<Paciente> datos, int numeroidentidad)
    {
            String res = "";
        
        int pos = busquedaBinariaRecursiva_Numero_identidad(datos,0,datos.size()-1, numeroidentidad);
        if( pos==-1){
               res="No existe numeroidentidad "+numeroidentidad;
           } else {
               res="El Paciente buscado es:"+ 
                    "\n"+".  "+datos.get(pos).toString()
                    +"\n";
           }
      
        return res;
    }         
    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void InsertarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarPacienteActionPerformed
       //Insertar Pacientes
        
        try{
           boolean permiso=true;
        String elNombre =jTextField1.getText();
        
        int elNroIdentidad= Integer.parseInt(jTextField3.getText());
        
        
        for (int i = 0; i < losPacientes.size(); i++) {
            if (losPacientes.get(i).getNumeroIdentidad()==elNroIdentidad)
            {
                JOptionPane.showMessageDialog(null,"Ya existe un paciente con ese numero de identificacion","ERROR CORRUPCI√ìN",JOptionPane.ERROR_MESSAGE);
                 permiso =false; 
                break;
                
            } 
        }
        if(permiso)
        {
            
        String opcion = jComboBox2.getSelectedItem().toString();

        switch (opcion)
        {
            case "Paciente Cotizante":
                try{
             double elSalario = Double.parseDouble(jTextField4.getText());
        int elCelular= Integer.parseInt(jTextField5.getText());  
                
            losPacientes.add(new PacienteCotizante (elSalario,elCelular,obtenerNuevoConsecutivo(),elNroIdentidad,elNombre));
            JOptionPane.showMessageDialog(null,"Paciente a√±adido con exito","Ingreso",JOptionPane.INFORMATION_MESSAGE);
                }catch(NumberFormatException x){
                     JOptionPane.showMessageDialog(null, "Por favor ingrese datos  numericos en el salario y/o el celular ", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            break;
            case "Paciente Beneficiario":
                try{
                    int ben = Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el numero de cedula de su cotizante", "Informaci√≥n",JOptionPane.INFORMATION_MESSAGE));
                     int pos = -1;

        for (int i = 0; i < losPacientes.size(); i++) {
            if (losPacientes.get(i).getNumeroIdentidad()==ben)
            {
               
                if(losPacientes.get(i) instanceof PacienteCotizante)
                {
                    int Numid = losPacientes.get(i).getNumeroIdentidad();
                    if(Numid ==ben){pos = i;}
                     
                }
                break;
                
            } 
        }
        if (pos == -1)
        {
            JOptionPane.showMessageDialog(null,"Cotizante Inexistente","ERROR CORRUPCI√ìN",JOptionPane.ERROR_MESSAGE);
       
        }else{
                String elTipoIdentificacion =jComboBox4.getSelectedItem().toString();
            losPacientes.add(new PacienteBeneficiario (elTipoIdentificacion,obtenerNuevoConsecutivo(),elNroIdentidad,elNombre,losPacientes.get(pos).CalcularRangosalarial(((PacienteCotizante)losPacientes.get(pos)).getSalario()), losPacientes.get(pos).getNumeroIdentidad()));
            JOptionPane.showMessageDialog(null,"Paciente a√±adido con exito","Ingreso",JOptionPane.INFORMATION_MESSAGE);
        }
                }catch(NullPointerException e){
                    JOptionPane.showMessageDialog(null, "Por favor verifique el ingreso de los los datos", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            break;
        }
       
            
        
        }}
         catch(NullPointerException e){
                    JOptionPane.showMessageDialog(null, "Por favor verifique el ingreso de los los datos"+e, "ERROR", JOptionPane.ERROR_MESSAGE);
                }
        catch(NumberFormatException x){
                     JOptionPane.showMessageDialog(null, "Por favor ingrese datos  numericos en el numero de identidad y/ cedula de cotizante valida", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
      

    }//GEN-LAST:event_InsertarPacienteActionPerformed
    
    private void InsertarServicioMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarServicioMedicoActionPerformed
    //Insertar los servicios medicos
        
        try {
        int id = Integer.parseInt(JOptionPane.showInputDialog(null,"Escriba el numero de identidad para agregar el servicio", "Informaci√≥n",JOptionPane.INFORMATION_MESSAGE));
        int pos = -1;
        for (int i = 0; i < losPacientes.size(); i++) {
            if (losPacientes.get(i).getNumeroIdentidad()==id)
            {
                pos = i;
                break;
            } 
        }
        if (pos == -1)
        {
            JOptionPane.showMessageDialog(null,"Paciente Inexistente","ERROR",JOptionPane.ERROR_MESSAGE);

        }
        else
        {
            try{
                String elTipo = jComboBox1.getSelectedItem().toString(); 
                
                
                 LocalDate LaFecha = LocalDate.parse(jTextField8.getText(), DateTimeFormatter.ofPattern("d/M/yyyy") );
                 String fecha=jTextField8.getText();
                 boolean validarfecha=true;
               
                  if(validarfecha){
                      fechaActual();
                      JOptionPane.showMessageDialog(null, "Fecha valida");
                     
                 
                 
                double elCosto = Double.parseDouble(jTextField6.getText());
                ServicioMedico serM = new ServicioMedico(elTipo,LaFecha,elCosto,losPacientes.get(pos).getRangoSalarial());
                losPacientes.get(pos).getSusServiciosMedicos().add(serM);
                
                if (losPacientes.get(pos) instanceof PacienteBeneficiario){
                    
                    JOptionPane.showMessageDialog(null,"Servicio Medico a√±adido con exito, valor copago: " + 
                            serM.calcularCoPago() + "valor cuota Moderadora: " + serM.calcularCuotaModeradoraBeneficiario(),"Ingreso",JOptionPane.INFORMATION_MESSAGE);
                }else
                    JOptionPane.showMessageDialog(null,"Servicio Medico a√±adido con exito, valor cuota moderadora: " + 
                            serM.calcularCuotaModeradoraCotizante(),"Ingreso",JOptionPane.INFORMATION_MESSAGE);
                 }
                  else if(LaFecha.isBefore(LaFecha) && LaFecha.isAfter(LaFecha)) {
                    JOptionPane.showMessageDialog(null, "Debe digitar una fecha valida");
                    validarfecha=false;
                
                 }
            }catch(NumberFormatException x){
                     JOptionPane.showMessageDialog(null, "Por favor ingrese datos  numericos en el costo", "ERROR", JOptionPane.ERROR_MESSAGE);
                }catch(NullPointerException e){
                    JOptionPane.showMessageDialog(null, "Por favor verifique el ingreso de los los datos", "ERROR", JOptionPane.ERROR_MESSAGE);
                }catch(DateTimeParseException y)
                {
                     JOptionPane.showMessageDialog(null, "Por favor ingrese la fecha con el formato dia/mes/a√±o ", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
           
        }
        
        }catch(NullPointerException e){
                    JOptionPane.showMessageDialog(null, "Por favor verifique el ingreso de los los datos", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
        catch(NumberFormatException x){
                     JOptionPane.showMessageDialog(null, "Por favor ingrese datos  numericos ", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_InsertarServicioMedicoActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsaPaciente_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsaPaciente_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsaPaciente_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsaPaciente_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsaPaciente_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton InsertarPaciente;
    private javax.swing.JButton InsertarServicioMedico;
    private javax.swing.JLabel Nombre;
    private javax.swing.JButton ejecutarReporte;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JButton salir;
    // End of variables declaration//GEN-END:variables

    
    public static String fechaActual(){
     
     Date fecha = new Date();
     SimpleDateFormat formatoFecha = new SimpleDateFormat("d/MM/yyyy");
     boolean validar=true;    
     fecha.getTime();
   
         if (fecha.after(fecha) && fecha.before(fecha)) {
             JOptionPane.showMessageDialog(null, "Error vuelve a ingresar la fecha actual");
             System.out.println("as");
             validar=false;
        }
     return formatoFecha.format(fecha);
 }
      



}
